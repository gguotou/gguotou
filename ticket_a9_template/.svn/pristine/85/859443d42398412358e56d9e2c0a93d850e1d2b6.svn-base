/*
 * 这个文件用于arm9主板接led显示器的，通过向串口写些命令来控制led的显示
 */
#include "leddisplay.h"

LedDis::LedDis(QObject *parent) :
    QThread(parent)
{
    qs = new QSettings(QS_FILEPATH, QSettings::IniFormat);
    QString comStr;
    QString str;
    str = qs->value("ALEDDISCOM","COM0").toString();

    switch(str.mid(3,1).toInt())
    {
        case 0x01:comStr = COM1;break;
        case 0x02:comStr = COM2;break;
        case 0x03:comStr = COM3;break;
        case 0x04:comStr = COM4;break;
        case 0x05:comStr = COM5;break;
        case 0x06:comStr = COM6;break;
        default:comStr = LEDDISCOM;break;
    }

    if(str.mid(3,1).toInt() >=1 && str.mid(3,1).toInt()<=6)
    {
        qDebug("leddis com is defined by user.conf");
    }
    else
    {
        qDebug("leddis com is defined by config.h");
    }

    if(comStr.indexOf("ttymxc")>=0)
        IsComOnboardFlag = 1;
    else
        IsComOnboardFlag = 0;
    if(IsComOnboardFlag)
    {
        QByteArray a;
        a = comStr.toLatin1();
        fp = open(a.data(),O_RDWR|O_NOCTTY|O_NDELAY); //打开串口0读写 //以非阻塞模式打开串口//O_NDELAY 等价于 O_NOBLOCK
        if(fp == -1)
        {
            qDebug()<<QString("open %1 err").arg(comStr);
            comOpenErr = 1;
            return;
        }
        struct termios options;
        tcgetattr(fp,&options);
        //设置波特率
        cfsetispeed(&options,B115200);
        cfsetospeed(&options,B115200);

        options.c_cflag |= (CLOCAL|CREAD);

        options.c_lflag  &= ~(ICANON | ECHO | ECHOE | ISIG);  /*Input*/
        options.c_oflag  &= ~OPOST;   /*Output*/
        options.c_iflag  &= ~(ICRNL|IXON);

        tcsetattr(fp,TCSANOW,&options);
    }
    else
    {
        myCom = new Posix_QextSerialPort(comStr,QextSerialBase::Polling);
        myCom->open(QIODevice::ReadWrite);
        //根据组合枢内容对串口进行设置
        //设置波特率
        myCom->setBaudRate(BAUD115200);
        myCom->setDataBits(DATA_8);
        myCom->setParity(PAR_NONE);
        myCom->setStopBits(STOP_1);

        //设置数据流控制
        myCom->setFlowControl(FLOW_OFF);
        //设置延时
        myCom->setTimeout(5);
    }
    comOpenErr = 0;

    fm = this->parent();
}
void LedDis::CloseCom()
{
    if(IsComOnboardFlag)
        close(fp);
    else
        myCom->close();
}
void LedDis::SendBuf(QByteArray buf)
{
    if(comOpenErr)return;
    if(IsComOnboardFlag)
    {
        char *message;
        message = buf.data();
        write(fp, message, buf.size());
    }
    else
    {
        myCom->write(buf);
    }
}


void LedDis::Dis(QByteArray data)
{
    emit TicketDebug("led discmd:" + BgComm::ByteArrayToString(data, 16, true));
    SendBuf(data);
}
