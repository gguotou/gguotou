#ifndef TCPCLIENTTHREAD_H
#define TCPCLIENTTHREAD_H

#include <QThread>
#include <QtNetwork>
#include <QProcess>
#include <QDateTime>
#include <QtAlgorithms>
#include "config.h"

#include "userevent.h"
#include "dataprocess.h"

#include <QTcpSocket>
#include <QTimer>
#include <QApplication>

#include "config.h"
#include "protocol.h"

#define BUFSIZE     1024*10
class TcpClientThread : public QThread
{
    Q_OBJECT
public:
    TcpClientThread(QObject * parent);
    QObject * fm;
private:
    quint32 nextMessageSize;
    quint32 totalMessageSize;
    quint32 readMessageSize;
    QTimer *timer;
    QByteArray tcpData;
    QByteArray tcpHead;
    quint8 tcpHeadSize;
    QTcpSocket *tcpSocket;
    char TcpQueue[BUFSIZE];                ///< 循环消息队列
    int wReadPoint;                     ///< 读指针
    int wWritePoint;                    ///< 写指针

    bool event(QEvent *);
    bool doConnect(QString serverAddr,quint16 port);
    bool doDisconnect();

    void RecvMsg(const char *data, int len);
    void run();

private slots:
    void tcpError();
    void tcpDisconnect();
    void readServer();
    bool TcpSend(QByteArray buf);
    void TcpReadErr();
    void processLogin();
signals:
    void TicketDebug(QString);

};

#endif // TCPCLIENTTHREAD_H
